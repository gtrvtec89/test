@model blah.Models.Clients

@{
    ViewBag.Title = "Create";
}
<style type="text/css">

/*	.container {
		position: fixed;
		left: 350px;
		padding: 0;
		margin: 0;
		background-color: #ff00ff;
	}*/

	#container {
		display: flex;
		flex-direction: row;
		flex-wrap: nowrap;
		justify-content: space-between;
		background-color: white;
		padding-left: 100px;
		padding-right: 100px;
		padding-top: 100px;
		padding-bottom: 100px;
		border: blue;
	}

	#container > div {
		width: 100px;
		height: 100px;
		border: 20px solid blue;
	}

/*	div1 {
		background: green;
		display: inline-block;
		float: left;
	}

	div2 {
		background: red;
		display: inline-block;
		float: right;
	}*/



</style>
<h2>Clients</h2>



<div id="container">

	@using (Html.BeginForm()) {
		@Html.AntiForgeryToken()



		<div class="div1">
			<h4>Owner Information 1</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.strO1FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1FirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1FirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1LastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1LastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1LastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1Address, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1Address, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1Address, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1Phone, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1Phone, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1Phone, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1Zip, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1Zip, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1Zip, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1Email, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1Email, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1City, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1City, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1City, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1State, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1State, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1State, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO1Notes, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO1Notes, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO1Notes, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

	}


		@using (Html.BeginForm()) {
			@Html.AntiForgeryToken()

			<div class="div2">
			<h4>Owner Information 2</h4>
			<div class="form-group">
				@Html.LabelFor(model => model.strO2FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2FirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2FirstName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2LastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2LastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2LastName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2Address, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2Address, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2Address, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2Phone, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2Phone, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2Phone, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2Zip, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2Zip, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2Zip, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2Email, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2Email, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2City, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2City, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2City, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2State, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2State, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2State, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strO2Notes, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strO2Notes, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strO2Notes, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
			</div>
		}
	</div>

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>
